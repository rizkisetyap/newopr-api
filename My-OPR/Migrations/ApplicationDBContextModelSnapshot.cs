// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using My_OPR.Data;

#nullable disable

namespace My_OPR.Migrations
{
    [DbContext(typeof(ApplicationDBContext))]
    partial class ApplicationDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("My_OPR.Models.DocumentISO.DetailRegister", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("RegisteredFormId")
                        .HasColumnType("int");

                    b.Property<int>("Revisi")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("isActive")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("RegisteredFormId");

                    b.ToTable("DetailRegisters");
                });

            modelBuilder.Entity("My_OPR.Models.DocumentISO.FileRegisteredIso", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DetailRegisterId")
                        .HasColumnType("int");

                    b.Property<string>("FileName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FilePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("DetailRegisterId")
                        .IsUnique();

                    b.ToTable("FileRegisteredIsos");
                });

            modelBuilder.Entity("My_OPR.Models.DocumentISO.HistoryISO", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FilePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("IsoSupportId")
                        .HasColumnType("int");

                    b.Property<int>("Revision")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IsoSupportId");

                    b.ToTable("HistoryISOs");
                });

            modelBuilder.Entity("My_OPR.Models.DocumentISO.ISOCore", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FilePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Revision")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("ISOCores");
                });

            modelBuilder.Entity("My_OPR.Models.DocumentISO.ISOSupport", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("FilePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ISOCoreId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("RegisteredFormId")
                        .HasColumnType("int");

                    b.Property<int?>("Revision")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ISOCoreId");

                    b.HasIndex("RegisteredFormId");

                    b.ToTable("ISOSupports");
                });

            modelBuilder.Entity("My_OPR.Models.DocumentISO.KategoriDocument", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("KategoriDocuments");
                });

            modelBuilder.Entity("My_OPR.Models.DocumentISO.RegisteredForm", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FormNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("KategoriDocumentId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NoUrut")
                        .HasColumnType("int");

                    b.Property<int>("ServiceId")
                        .HasColumnType("int");

                    b.Property<int>("SubLayananId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("KategoriDocumentId");

                    b.HasIndex("ServiceId");

                    b.HasIndex("SubLayananId");

                    b.ToTable("RegisteredForms");
                });

            modelBuilder.Entity("My_OPR.Models.Master.Account", b =>
                {
                    b.Property<string>("NPP")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("NPP");

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("My_OPR.Models.Master.AccountRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("NPP")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("NPP");

                    b.HasIndex("RoleId");

                    b.ToTable("AccountRoles");
                });

            modelBuilder.Entity("My_OPR.Models.Master.AnomaliLaporan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Anomali")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Keterangan")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ServiceId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ServiceId");

                    b.ToTable("AnomaliLaporan");
                });

            modelBuilder.Entity("My_OPR.Models.Master.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Icon")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("IsMainCategory")
                        .HasColumnType("bit");

                    b.Property<string>("Nama")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("My_OPR.Models.Master.Employee", b =>
                {
                    b.Property<string>("NPP")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Gender")
                        .HasColumnType("int");

                    b.Property<int?>("GroupId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PositionId")
                        .HasColumnType("int");

                    b.Property<int?>("ServiceId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("NPP");

                    b.HasIndex("GroupId");

                    b.HasIndex("PositionId");

                    b.HasIndex("ServiceId");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("My_OPR.Models.Master.Event", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EventName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EventTheme")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Organizer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Events");
                });

            modelBuilder.Entity("My_OPR.Models.Master.ExtUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("NPP")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nama")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Unit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("ExtUsers");
                });

            modelBuilder.Entity("My_OPR.Models.Master.Group", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("GroupName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Groups");
                });

            modelBuilder.Entity("My_OPR.Models.Master.OfficeLocation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Latitude")
                        .HasColumnType("float");

                    b.Property<double>("Longitude")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("officeLocations");
                });

            modelBuilder.Entity("My_OPR.Models.Master.Position", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Grade")
                        .HasColumnType("int");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("PositionName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Positions");
                });

            modelBuilder.Entity("My_OPR.Models.Master.Role", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("My_OPR.Models.Master.Service", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("GroupId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("KategoriService")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShortName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SubLayananId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GroupId");

                    b.HasIndex("SubLayananId");

                    b.ToTable("Services");
                });

            modelBuilder.Entity("My_OPR.Models.Master.Slider", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("Path")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Sliders");
                });

            modelBuilder.Entity("My_OPR.Models.Master.SubLayanan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ServiceId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Units");
                });

            modelBuilder.Entity("My_OPR.Models.Transaction.Content", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("BodyContent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("PathContent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PathImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Contents");
                });

            modelBuilder.Entity("My_OPR.Models.Transaction.LaporanHarian", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("AnomaliId")
                        .HasColumnType("int");

                    b.Property<int>("ApprovalId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("GroupId")
                        .HasColumnType("int");

                    b.Property<bool>("IsAnomaly")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<DateTime>("TanggalTransaksi")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AnomaliId");

                    b.HasIndex("GroupId");

                    b.ToTable("LaporanHarians");
                });

            modelBuilder.Entity("My_OPR.Models.Transaction.Presence", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("EventId")
                        .HasColumnType("int");

                    b.Property<int?>("ExtUserId")
                        .HasColumnType("int");

                    b.Property<bool>("IsInternal")
                        .HasColumnType("bit");

                    b.Property<string>("NPP")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("EventId");

                    b.HasIndex("ExtUserId");

                    b.HasIndex("NPP");

                    b.ToTable("Presences");
                });

            modelBuilder.Entity("My_OPR.Models.ZoomScheduler.Scheduler", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Activity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EmployeeNPP")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ZoomId")
                        .HasColumnType("int");

                    b.Property<int>("ZoomStatusId")
                        .HasColumnType("int");

                    b.Property<string>("link")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeNPP");

                    b.HasIndex("ZoomId");

                    b.HasIndex("ZoomStatusId");

                    b.ToTable("Schedulers");
                });

            modelBuilder.Entity("My_OPR.Models.ZoomScheduler.ZoomModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Zooms");
                });

            modelBuilder.Entity("My_OPR.Models.ZoomScheduler.ZoomStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ZoomStatuses");
                });

            modelBuilder.Entity("My_OPR.Models.DocumentISO.DetailRegister", b =>
                {
                    b.HasOne("My_OPR.Models.DocumentISO.RegisteredForm", "RegisteredForm")
                        .WithMany("DetailRegisters")
                        .HasForeignKey("RegisteredFormId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RegisteredForm");
                });

            modelBuilder.Entity("My_OPR.Models.DocumentISO.FileRegisteredIso", b =>
                {
                    b.HasOne("My_OPR.Models.DocumentISO.DetailRegister", "DetailRegister")
                        .WithOne("FileRegisteredIso")
                        .HasForeignKey("My_OPR.Models.DocumentISO.FileRegisteredIso", "DetailRegisterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DetailRegister");
                });

            modelBuilder.Entity("My_OPR.Models.DocumentISO.HistoryISO", b =>
                {
                    b.HasOne("My_OPR.Models.DocumentISO.ISOSupport", "ISOSupport")
                        .WithMany("HistoryISOs")
                        .HasForeignKey("IsoSupportId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ISOSupport");
                });

            modelBuilder.Entity("My_OPR.Models.DocumentISO.ISOSupport", b =>
                {
                    b.HasOne("My_OPR.Models.DocumentISO.ISOCore", "ISOCore")
                        .WithMany("Support")
                        .HasForeignKey("ISOCoreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("My_OPR.Models.DocumentISO.RegisteredForm", "RegisteredForm")
                        .WithMany()
                        .HasForeignKey("RegisteredFormId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ISOCore");

                    b.Navigation("RegisteredForm");
                });

            modelBuilder.Entity("My_OPR.Models.DocumentISO.RegisteredForm", b =>
                {
                    b.HasOne("My_OPR.Models.DocumentISO.KategoriDocument", "KategoriDocument")
                        .WithMany("RegisteredForms")
                        .HasForeignKey("KategoriDocumentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("My_OPR.Models.Master.Service", "Service")
                        .WithMany("RegisteredForms")
                        .HasForeignKey("ServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("My_OPR.Models.Master.SubLayanan", "Unit")
                        .WithMany()
                        .HasForeignKey("SubLayananId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("KategoriDocument");

                    b.Navigation("Service");

                    b.Navigation("Unit");
                });

            modelBuilder.Entity("My_OPR.Models.Master.Account", b =>
                {
                    b.HasOne("My_OPR.Models.Master.Employee", "Employee")
                        .WithOne("Account")
                        .HasForeignKey("My_OPR.Models.Master.Account", "NPP")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("My_OPR.Models.Master.AccountRole", b =>
                {
                    b.HasOne("My_OPR.Models.Master.Account", "Account")
                        .WithMany("Roles")
                        .HasForeignKey("NPP");

                    b.HasOne("My_OPR.Models.Master.Role", "Role")
                        .WithMany("AccountRoles")
                        .HasForeignKey("RoleId");

                    b.Navigation("Account");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("My_OPR.Models.Master.AnomaliLaporan", b =>
                {
                    b.HasOne("My_OPR.Models.Master.Service", "Layanan")
                        .WithMany()
                        .HasForeignKey("ServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Layanan");
                });

            modelBuilder.Entity("My_OPR.Models.Master.Employee", b =>
                {
                    b.HasOne("My_OPR.Models.Master.Group", null)
                        .WithMany("Employees")
                        .HasForeignKey("GroupId");

                    b.HasOne("My_OPR.Models.Master.Position", "Position")
                        .WithMany("Employees")
                        .HasForeignKey("PositionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("My_OPR.Models.Master.Service", "Service")
                        .WithMany("Employees")
                        .HasForeignKey("ServiceId");

                    b.Navigation("Position");

                    b.Navigation("Service");
                });

            modelBuilder.Entity("My_OPR.Models.Master.Service", b =>
                {
                    b.HasOne("My_OPR.Models.Master.Group", "Group")
                        .WithMany("Services")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("My_OPR.Models.Master.SubLayanan", null)
                        .WithMany("Services")
                        .HasForeignKey("SubLayananId");

                    b.Navigation("Group");
                });

            modelBuilder.Entity("My_OPR.Models.Transaction.Content", b =>
                {
                    b.HasOne("My_OPR.Models.Master.Category", "Category")
                        .WithMany("Contents")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("My_OPR.Models.Transaction.LaporanHarian", b =>
                {
                    b.HasOne("My_OPR.Models.Master.AnomaliLaporan", "Anomali")
                        .WithMany()
                        .HasForeignKey("AnomaliId");

                    b.HasOne("My_OPR.Models.Master.Group", "Group")
                        .WithMany()
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Anomali");

                    b.Navigation("Group");
                });

            modelBuilder.Entity("My_OPR.Models.Transaction.Presence", b =>
                {
                    b.HasOne("My_OPR.Models.Master.Event", "Event")
                        .WithMany("Presence")
                        .HasForeignKey("EventId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("My_OPR.Models.Master.ExtUser", "ExtUser")
                        .WithMany()
                        .HasForeignKey("ExtUserId");

                    b.HasOne("My_OPR.Models.Master.Employee", "Employee")
                        .WithMany("Presences")
                        .HasForeignKey("NPP");

                    b.Navigation("Employee");

                    b.Navigation("Event");

                    b.Navigation("ExtUser");
                });

            modelBuilder.Entity("My_OPR.Models.ZoomScheduler.Scheduler", b =>
                {
                    b.HasOne("My_OPR.Models.Master.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeNPP");

                    b.HasOne("My_OPR.Models.ZoomScheduler.ZoomModel", "ZoomModel")
                        .WithMany("Scheduler")
                        .HasForeignKey("ZoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("My_OPR.Models.ZoomScheduler.ZoomStatus", "ZoomStatus")
                        .WithMany("Schedulers")
                        .HasForeignKey("ZoomStatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("ZoomModel");

                    b.Navigation("ZoomStatus");
                });

            modelBuilder.Entity("My_OPR.Models.DocumentISO.DetailRegister", b =>
                {
                    b.Navigation("FileRegisteredIso");
                });

            modelBuilder.Entity("My_OPR.Models.DocumentISO.ISOCore", b =>
                {
                    b.Navigation("Support");
                });

            modelBuilder.Entity("My_OPR.Models.DocumentISO.ISOSupport", b =>
                {
                    b.Navigation("HistoryISOs");
                });

            modelBuilder.Entity("My_OPR.Models.DocumentISO.KategoriDocument", b =>
                {
                    b.Navigation("RegisteredForms");
                });

            modelBuilder.Entity("My_OPR.Models.DocumentISO.RegisteredForm", b =>
                {
                    b.Navigation("DetailRegisters");
                });

            modelBuilder.Entity("My_OPR.Models.Master.Account", b =>
                {
                    b.Navigation("Roles");
                });

            modelBuilder.Entity("My_OPR.Models.Master.Category", b =>
                {
                    b.Navigation("Contents");
                });

            modelBuilder.Entity("My_OPR.Models.Master.Employee", b =>
                {
                    b.Navigation("Account");

                    b.Navigation("Presences");
                });

            modelBuilder.Entity("My_OPR.Models.Master.Event", b =>
                {
                    b.Navigation("Presence");
                });

            modelBuilder.Entity("My_OPR.Models.Master.Group", b =>
                {
                    b.Navigation("Employees");

                    b.Navigation("Services");
                });

            modelBuilder.Entity("My_OPR.Models.Master.Position", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("My_OPR.Models.Master.Role", b =>
                {
                    b.Navigation("AccountRoles");
                });

            modelBuilder.Entity("My_OPR.Models.Master.Service", b =>
                {
                    b.Navigation("Employees");

                    b.Navigation("RegisteredForms");
                });

            modelBuilder.Entity("My_OPR.Models.Master.SubLayanan", b =>
                {
                    b.Navigation("Services");
                });

            modelBuilder.Entity("My_OPR.Models.ZoomScheduler.ZoomModel", b =>
                {
                    b.Navigation("Scheduler");
                });

            modelBuilder.Entity("My_OPR.Models.ZoomScheduler.ZoomStatus", b =>
                {
                    b.Navigation("Schedulers");
                });
#pragma warning restore 612, 618
        }
    }
}
